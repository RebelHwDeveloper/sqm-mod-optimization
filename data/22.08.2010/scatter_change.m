function scatter_change(X1, Y1)
%CREATEFIGURE(X1, Y1)
%  X1:  scatter x
%  Y1:  scatter y

%  Auto-generated by MATLAB on 22-Jun-2018 11:27:20

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1);
hold(axes1,'on');

% Create scatter
scatter1 = scatter(X1,Y1,'DisplayName','data1');

% Get xdata from plot for data statistics
xdata1 = get(scatter1, 'xdata');
% Get ydata from plot for data statistics
ydata1 = get(scatter1, 'ydata');
% Make sure data are column vectors
xdata1 = xdata1(:);
ydata1 = ydata1(:);


% Get axes ylim
axXLim1 = get(axes1,'xlim');

% Find the mean
ymean1 = mean(ydata1);
% Get coordinates for the mean line
meanValue1 = [ymean1 ymean1];
% Plot the mean
statLine1 = plot(axXLim1,meanValue1,'DisplayName','   y mean',...
    'Tag','mean y',...
    'Parent',axes1,...
    'LineStyle','-.',...
    'Color',[0 0.5 0]);

% Set new line in proper position
setLineOrder(axes1,statLine1,scatter1);

% Find the std
ystd1 = std(ydata1);

% Prepare values to plot std; first find the mean
ymean2 = mean(ydata1);
% Compute bounds as mean +/- std
lowerBound1 = ymean2 - ystd1;
upperBound1 = ymean2 + ystd1;
% Get coordinates for the std bounds line
stdValue1 = [lowerBound1 lowerBound1 NaN upperBound1 upperBound1 NaN];
axYStdLim1 = [axXLim1 NaN axXLim1 NaN];

% Plot the bounds
statLine2 = plot(axYStdLim1,stdValue1,'DisplayName','   y std',...
    'Tag','std y',...
    'Parent',axes1,...
    'LineStyle','-.',...
    'Color',[0.75 0 0.75]);

% Set new line in proper position
setLineOrder(axes1,statLine2,scatter1);

% Create xlabel
xlabel({'Time'});

% Create ylabel
ylabel({'Latency variation'});

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[15 60]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes1,[-0.9 90]);
% Create legend
legend(axes1,'show');

%-------------------------------------------------------------------------%
function setLineOrder(axesh1, newLine1, associatedLine1)
%SETLINEORDER(AXESH1,NEWLINE1,ASSOCIATEDLINE1)
%  Set line order
%  AXESH1:  axes
%  NEWLINE1:  new line
%  ASSOCIATEDLINE1:  associated line

% Get the axes children
hChildren = get(axesh1,'Children');
% Remove the new line
hChildren(hChildren==newLine1) = [];
% Get the index to the associatedLine
lineIndex = find(hChildren==associatedLine1);
% Reorder lines so the new line appears with associated data
hNewChildren = [hChildren(1:lineIndex-1);newLine1;hChildren(lineIndex:end)];
% Set the children:
set(axesh1,'Children',hNewChildren);

